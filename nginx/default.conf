# Authors: Derek Gary, Takaiya Jones
# Purpose: 

# 1. Serves as a reverse proxy for directing our API requests from the
# frontend to the backend, and vice-versa.

# 2. Ensures all domains are always served over HTTPS by redirecting HTTP 
# traffic to HTTPS using our Let's Encrypt SSL certs.

# 3. Acts as a web server to serve our built React frontend files. 

# 4. Ensures certain security headers are added to requests.


# Redirect HTTP traffic to HTTPS for both the main domain and the API subdomain
server {
    listen 80;
    server_name test-server-0.click api.test-server-0.click;

    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuration for the main domain
server {
    listen 443 ssl;
    server_name test-server-0.click;

    ssl_certificate /etc/letsencrypt/live/test-server-0.click/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test-server-0.click/privkey.pem;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location = /zbHealthCheck {
        access_log off;
        return 200 'healthy';
        add_header Content-Type text/plain;
    }

    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
}

# Configuration for the API subdomain
server {
    listen 443 ssl;
    server_name api.test-server-0.click;
    ssl_certificate /etc/letsencrypt/live/test-server-0.click/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test-server-0.click/privkey.pem;

    location / {
        # Set CORS headers for actual requests managed by Django
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}
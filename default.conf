# Redirect HTTP traffic to HTTPS for both the main domain and the API subdomain
server {
    listen 80;
    server_name test-server-0.click api.test-server-0.click;
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
        try_files $uri =404;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuration for the main domain
server {
    listen 443 ssl;
    server_name test-server-0.click;

    ssl_certificate /etc/letsencrypt/live/test-server-0.click/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test-server-0.click/privkey.pem;

    # Redirect API requests to the API subdomain
    location ~ ^/api/ {
        rewrite ^/api/(.*)$ https://api.test-server-0.click/$1 permanent;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html index.html;
        try_files $uri $uri/ /index.html;
    }
}

# Configuration for the API subdomain
server {
    listen 443 ssl;
    server_name api.test-server-0.click;

    ssl_certificate /etc/letsencrypt/live/test-server-0.click/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test-server-0.click/privkey.pem;

    # SSL parameters directly included
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Handle API requests
    location / {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-CSRFTOKEN $http_x_csrftoken;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_cookie_path / "/; HTTPOnly; Secure";
    }
}
